fragment ColonyAction on ColonyAction {
  transactionHash: id
  colonyAddress: colonyId
  type
  blockNumber
  initiatorAddress
  initiatorUser {
    ...UserDisplayFragment
  }
  initiatorColony {
    ...ColonyDisplayFragment
  }
  initiatorExtension {
    ...ExtensionDisplayFragment
  }
  initiatorToken {
    # NOTE: Token doesn't have a lightweight Display-only Fragment, as the props
    # on that fragment are just 2 less than the actual "full" version of the Fragment
    ...Token
  }
  recipientAddress
  recipientUser {
    ...UserDisplayFragment
  }
  recipientColony {
    ...ColonyDisplayFragment
  }
  recipientExtension {
    ...ExtensionDisplayFragment
  }
  recipientToken {
    # NOTE: Token doesn't have a lightweight Display-only Fragment, as the props
    # on that fragment are just 2 less than the actual "full" version of the Fragment
    ...Token
  }
  amount
  tokenAddress
  token {
    # NOTE: Token doesn't have a lightweight Display-only Fragment, as the props
    # on that fragment are just 2 less than the actual "full" version of the Fragment
    ...Token
  }
  fromDomain {
    ...Domain
  }
  toDomain {
    ...Domain
  }
  createdAt
  newColonyVersion
  roles {
    role_0
    role_1
    role_2
    role_3
    role_5
    role_6
  }
  individualEvents
  isMotion
  motionData {
    ...MotionData
  }
  colony {
    colonyAddress: id
  }
}

fragment MotionStakeFragment on MotionStakeFragment {
  yay
  nay
}

fragment MotionData on MotionData {
  motionId
  motionStakes {
    raw {
      ...MotionStakeFragment
    }
    percentage {
      ...MotionStakeFragment
    }
  }
  usersStakes {
    address
    stakes {
      raw {
        ...MotionStakeFragment
      }
      percentage {
        ...MotionStakeFragment
      }
    }
  }
  remainingStakes 
  userMinStake
  requiredStake
  rootHash
  motionDomainId
}
