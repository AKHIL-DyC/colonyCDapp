#!/bin/bash

cd colonyNetwork

# Ganache

yarn start:blockchain:client &

# Colony Network Contracts

DISABLE_DOCKER=true yarn truffle migrate

# Export deployed addresses

ETHER_ROUTER_ADDRESS=$(jq -r .etherRouterAddress etherrouter-address.json)
MINER_ACCOUNT_ADDRESS=$(jq -r '.addresses | keys[5]'  ganache-accounts.json)


# Copy over colony network build artifacts to aid in development
# Some of the files are needed to be imported and used in the app for local dev

rm --recursive --force /colonyCDapp/amplify/mock-data/colonyNetworkArtifacts
mkdir --parents /colonyCDapp/amplify/mock-data/colonyNetworkArtifacts
cp -R ./build /colonyCDapp/amplify/mock-data/colonyNetworkArtifacts/
cp ./etherrouter-address.json /colonyCDapp/amplify/mock-data/colonyNetworkArtifacts/etherrouter-address.json

# Reputation Miner

cd packages/reputation-miner
node ./bin/index.js --minerAddress $MINER_ACCOUNT_ADDRESS --syncFrom 1 --colonyNetworkAddress $ETHER_ROUTER_ADDRESS --oracle --auto --dbPath reputationStates.sqlite --oraclePort 3002 --processingDelay 1 &

# Reputation Monitor

cd ../../../reputation-monitor-dev
node index.js $ETHER_ROUTER_ADDRESS &

# Block Ingestor


cd ../block-ingestor
npm run start &

# Amplify

cd /colonyCDapp
# Reset the build folder
mkdir /colonyCDapp/amplify/backend/api/colonycdapp/build
# Hidrate the meta config
# Note that this needs to be done in the run script as the backend folder will
# not be mounted in the docker image phase, only after the container has started
mv /colonyCDappBackend/scripts/amplify-meta.json.example /colonyCDapp/amplify/backend/amplify-meta.json

# Liftoff!

npm run amplify mock
